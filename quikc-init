#!/bin/python

from os.path import isfile, isdir
from os import mkdir
from sys import argv

class Color:
    HEADER = '\033[95m'
    OKBLUE = '\033[94m'
    OKGREEN = '\033[92m'
    WARNING = '\033[93m'
    FAIL = '\033[91m'
    ENDC = '\033[0m'
    BOLD = '\033[1m'
    UNDERLINE = '\033[4m'




if __name__ == "__main__":

    if len(argv) < 2:
        print(f"{Color.BOLD}{Color.FAIL}error{Color.ENDC}{Color.BOLD}:{Color.ENDC} package name not specified")
        exit(1)

    packageName = argv[1]
    createEmbeddedProject = "--embedded" in argv
    createCppProject = "--cpp" in argv


    BUILD_TOML_PATH = "./Build.toml"
    BUILD_INFO_DIR = "./buildinfo"
    BUILD_INFO_OBJ_DIR = f"{BUILD_INFO_DIR}/obj"
    BUILD_INFO_TABLE = f"{BUILD_INFO_DIR}/table"
    SOURCE_DIR = "./src"
    INCLUDE_DIR = "./include"
    sourceFile = f"{SOURCE_DIR}/{packageName}.cpp" if createCppProject else f"{SOURCE_DIR}/{packageName}.c"

    if not createCppProject:
        if not createEmbeddedProject:
            buildTomlContents = f"\
[package]\n\
    name = \"{packageName}\"\n\
    debug_build = true\n\
    \n\
[compiler]\n\
    compiler = \"gcc\""

            sourceFileCode = f"\
#include <stdio.h>\n\
\n\
int main(void)\n\
{{\n\
    printf(\"Hello world!\\n\");\n\
    return 0;\n\
}}"
        else:
            buildTomlContents = f"\
[package]\n\
    name = \"{packageName}\"\n\
    debug_build = true\n\
    \n\
[compiler]\n\
    compiler = \"gcc\"\n\
    args = [\n\
        \"-nolibc\",\n\
        \"-nostdlib\",\n\
        \"-nostartfiles\",\n\
        \"-nodefaultlibs\",\n\
        \"-nostdinc\",\n\
        \"-fno-builtin\",\n\
        \"-fno-stack-protector\",\n\
    ]\n\
    append_args = true"
                
    else:
        if not createEmbeddedProject:
            buildTomlContents = f"\
[package]\n\
    name = \"{packageName}\"\n\
    debug_build = true\n\
    \n\
[compiler]\n\
    compiler = \"g++\""

            sourceFileCode = f"\
#include <cstdio>\n\
\n\
int main()\n\
{{\n\
    printf(\"Hello world!\\n\");\n\
    return 0;\n\
}}"
        else:
            buildTomlContents = f"\
[package]\n\
    name = \"{packageName}\"\n\
    debug_build = true\n\
    \n\
[compiler]\n\
    compiler = \"g++\"\n\
    args = [\n\
        \"-nolibc\",\n\
        \"-nostdlib\",\n\
        \"-nostartfiles\",\n\
        \"-nodefaultlibs\",\n\
        \"-nostdinc\",\n\
        \"-nostdinc++\",\n\
        \"-fno-builtin\",\n\
        \"-fno-stack-protector\",\n\
    ]\n\
    append_args = true"
                

    # this is only used for creating tests to make sure the script runs correctly
    if "--debug" in argv:
        print("Source file contents:\n" + sourceFileCode)
        print("'Build.toml' contents:\n" + buildTomlContents)
        exit(0)


    try:
        if not isfile(BUILD_TOML_PATH):
            with open(BUILD_TOML_PATH, "w") as f:
                f.write(buildTomlContents)
        else:
            raise Exception("Build.toml already exists")

        if not isdir(SOURCE_DIR):
            mkdir(SOURCE_DIR)
        
        if not isdir(INCLUDE_DIR):
            mkdir(INCLUDE_DIR)

        if not isfile(sourceFile) and not createEmbeddedProject:
            with open(sourceFile, "w") as f:
                f.write(sourceFileCode)

    except Exception as e:
        print(f"{Color.BOLD}{Color.FAIL}error{Color.ENDC}{Color.BOLD}:{Color.ENDC} {e}")
        exit(1)

    print(f"{Color.OKGREEN}{Color.BOLD}Successfully created package '{packageName}'. You're all ready to go! :){Color.ENDC}")


